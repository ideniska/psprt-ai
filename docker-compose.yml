services:
  web:
    image: ideniska/passport_ai
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    volumes:
      - static_data:/app/static
      - media_data:/app/media
    env_file:
      - ./.env.dev
    depends_on:
      - db

  db:
    image: postgres:14
    container_name: passort-ai-db
    restart: always
    volumes:
      - passport_ai_postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env.dev

  nginx:
    image: nginx:1.19.8-alpine
    restart: always
    ports:
      - 9000:80
    volumes:
      - static_data:/static
      - media_data:/media
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web

  celery:
    image: ideniska/passport_ai
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A core worker -l info
    entrypoint: ""
    restart: always
    volumes:
      - media_data:/app/media
    env_file:
      - ./.env.dev
    depends_on:
      - db

  redis:
    image: redis:7.0.8-alpine
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1m20s
      timeout: 5s
      retries: 3

volumes:
  passport_ai_postgres_data:
  static_data:
  media_data:
